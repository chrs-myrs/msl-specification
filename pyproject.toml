[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "msl-specification"
version = "1.5.0"
description = "Markdown Specification Language - A specification format, not a package"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "MSL Contributors"},
]
keywords = ["specification", "markdown", "documentation", "requirements"]
requires-python = ">=3.8"
# Minimal dependencies for optional tools only
dependencies = [
    "PyYAML>=6.0",  # For parsing frontmatter in validation tools
]

[project.optional-dependencies]
render = [
    "Jinja2>=3.0",
]
dev = [
    "pytest>=7.0",
    "pytest-timeout>=2.0",
    "pytest-cov>=4.0",
    "black>=23.0",
    "flake8>=6.0",
    "mypy>=1.0",
    "pre-commit>=3.0",
]

[project.urls]
Homepage = "https://github.com/chrs-myrs/msl-specification"
Documentation = "https://github.com/chrs-myrs/msl-specification/tree/master/docs"
Issues = "https://github.com/chrs-myrs/msl-specification/issues"
Repository = "https://github.com/chrs-myrs/msl-specification"

# Note: Tools are optional - MSL is a specification, not software to install
# Run tools directly: python3 tools/cli/msl-lint.py

[tool.setuptools]
packages = ["tools", "tools.lib", "tools.cli"]

[tool.setuptools.package-data]
msl = ["schemas/*.json", "schemas/*.yaml"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short --strict-markers"

[tool.black]
line-length = 100
target-version = ["py38"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true